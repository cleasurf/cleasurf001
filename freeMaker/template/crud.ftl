package ${entity.javaPackage};
import java.util.Vector;
import java.util.Map.Entry;

import com.allinfo.manager.system.pub.ManConstant;

import net.sf.json.JSONObject;
import cn.toruk.core.db.Dao;
import cn.toruk.core.db.SqlExecutor;
import cn.toruk.pub.map.AreaContext;
import cn.toruk.pub.map.DataMap;
import cn.toruk.pub.map.DataTable;
import cn.toruk.expand.pub.page.QueryPage;
/**
 * This code is generated by FreeMarker
 * @author samon_liang@foxmail.com
 *
 */
public class ${entity.className} <#if entity.superclass?has_content> extends ${entity.superclass}</#if> 
{
    /********** attribute ***********/

   public void ${queryTab}List(AreaContext ctx) {
		DataMap params = new DataMap(ctx.getIn()); 
		QueryPage.queryDataInPage(ctx, "<#if entity.opepropertype.queryTab?has_content >${entity.opepropertype.queryTab}</#if>", params, "queryList",
				"queryListPagination");
   }

        /**
	 * 
	 * 功能：新增机构
	 * 
	 * @param ctx
	 */
	public void ${queryTab}Add(AreaContext ctx) {
		DataMap params = new DataMap(ctx.getIn());
		//添加默认值
		Dao.execUpdate("<#if entity.opepropertype.insertTab?has_content >${entity.opepropertype.insertTab}</#if>", ctx, params);
		JSONObject retData = new JSONObject();
		retData.put("status", "y");
		retData.put("info", "处理成功！");
		ctx.setAjaxContent(retData.toString());
	}
   
   /**
	 * 
	 * 功能：查看页面（可以作为修改和查看的公共交易方法）
	 * 
	 * @param ctx
	 */
	public void ${queryTab}Info(AreaContext ctx) {
		DataMap params = new DataMap(ctx.getIn());
		DataTable table = Dao.execQuery("<#if entity.opepropertype.queryTabById?has_content >${entity.opepropertype.queryTabById}</#if>", ctx, params);
		ctx.getOut().putAll(table.getRowLast());
	}

	/**
	 * 
	 * 功能：修改机构
	 * 
	 * @param ctx
	 */
	public void ${queryTab}Update(AreaContext ctx) {
		DataMap updateParam = new DataMap(ctx.getIn());
		Dao.execUpdate("<#if entity.opepropertype.updateTab?has_content >${entity.opepropertype.updateTab}</#if>", ctx, updateParam);
		JSONObject retData = new JSONObject();
		retData.put("status", "y");
		retData.put("info", "处理成功！");
		ctx.setAjaxContent(retData.toString());
	}

 

        /**
	 * 
	 * 功能：删除机构
	 * 
	 * @param ctx
	 * @throws Exception 
	 */
	public void ${queryTab}Del(AreaContext ctx) throws Exception {
		SqlExecutor executor = new SqlExecutor(false);
		try{
			Vector<Object> paramList = ctx.getAreaIn().getVector("listCheckbox");
			for(int i=0;i<paramList.size();i++){
				String ids = (String)paramList.get(i);//一条主键的键值对，多个主键使用&分割
				DataMap params = new DataMap(ctx.getIn());
				String[] idMapList = ids.split("&");
				for(int j=0;j<idMapList.length;j++){
					String idMapStr = idMapList[j];
					String[] idMap = idMapStr.split("=");
					String idName = idMap[0];
					String idValue = idMap[1];
					params.add(idName,idValue);
				}
				Dao.execUpdate("<#if entity.opepropertype.deleteTab?has_content >${entity.opepropertype.deleteTab}</#if>", executor, params);
			}
			executor.commit();
			ctx.setAjaxContent(ManConstant.AJAX_SUCCESS_RETURN);
		} catch (Exception e) {
			executor.rollback();
			throw e;//异常情况抛出处理
		} finally{
			executor.close();
		}
	}
}